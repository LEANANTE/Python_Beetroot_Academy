#!/usr/bin/env python3
"""
–¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞ –∫–Ω–∏–≥–∞ –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é JSON
–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python phonebook.py phonebook_name.json
"""

import json
import sys
import os


class PhoneBook:
    def __init__(self, filename):
        self.filename = filename
        self.contacts = []
        self.load_data()

    def load_data(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö –∑ JSON —Ñ–∞–π–ª—É"""
        if os.path.exists(self.filename):
            try:
                with open(self.filename, 'r', encoding='utf-8') as file:
                    self.contacts = json.load(file)
                print(f"‚úì –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ {len(self.contacts)} –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤ –∑ {self.filename}")
            except json.JSONDecodeError:
                print(f"‚ö† –§–∞–π–ª {self.filename} –ø–æ—à–∫–æ–¥–∂–µ–Ω–æ. –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É.")
                self.contacts = []
            except Exception as e:
                print(f"‚ö† –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ: {e}")
                self.contacts = []
        else:
            print(f"üìù –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—É –∫–Ω–∏–≥—É: {self.filename}")
            self.contacts = []

    def save_data(self):
        """–ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É JSON —Ñ–∞–π–ª"""
        try:
            with open(self.filename, 'w', encoding='utf-8') as file:
                json.dump(self.contacts, file, ensure_ascii=False, indent=2)
            print(f"‚úì –î–∞–Ω—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ –≤ {self.filename}")
        except Exception as e:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ: {e}")

    def add_entry(self):
        """–î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"""
        print("\n=== –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É ===")
        contact = {
            "first_name": input("–Ü–º'—è: ").strip(),
            "last_name": input("–ü—Ä—ñ–∑–≤–∏—â–µ: ").strip(),
            "phone": input("–¢–µ–ª–µ—Ñ–æ–Ω: ").strip(),
            "city": input("–ú—ñ—Å—Ç–æ: ").strip(),
            "state": input("–û–±–ª–∞—Å—Ç—å/–®—Ç–∞—Ç: ").strip()
        }

        if not contact["phone"]:
            print("‚ùå –¢–µ–ª–µ—Ñ–æ–Ω —î –æ–±–æ–≤'—è–∑–∫–æ–≤–∏–º –ø–æ–ª–µ–º!")
            return

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç–∏
        if any(c["phone"] == contact["phone"] for c in self.contacts):
            print(f"‚ö† –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {contact['phone']} –≤–∂–µ —ñ—Å–Ω—É—î!")
            return

        self.contacts.append(contact)
        print("‚úì –ö–æ–Ω—Ç–∞–∫—Ç –¥–æ–¥–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")

    def search_by_first_name(self):
        """–ü–æ—à—É–∫ –∑–∞ —ñ–º'—è–º"""
        name = input("\n–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –¥–ª—è –ø–æ—à—É–∫—É: ").strip().lower()
        results = [c for c in self.contacts if c["first_name"].lower().startswith(name)]
        self._display_results(results)

    def search_by_last_name(self):
        """–ü–æ—à—É–∫ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º"""
        name = input("\n–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ –¥–ª—è –ø–æ—à—É–∫—É: ").strip().lower()
        results = [c for c in self.contacts if c["last_name"].lower().startswith(name)]
        self._display_results(results)

    def search_by_full_name(self):
        """–ü–æ—à—É–∫ –∑–∞ –ø–æ–≤–Ω–∏–º —ñ–º'—è–º"""
        full_name = input("\n–í–≤–µ–¥—ñ—Ç—å –ø–æ–≤–Ω–µ —ñ–º'—è (—ñ–º'—è –ø—Ä—ñ–∑–≤–∏—â–µ): ").strip().lower()
        results = []
        for c in self.contacts:
            contact_full_name = f"{c['first_name']} {c['last_name']}".lower()
            if full_name in contact_full_name:
                results.append(c)
        self._display_results(results)

    def search_by_phone(self):
        """–ü–æ—à—É–∫ –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
        phone = input("\n–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É (–∞–±–æ –π–æ–≥–æ —á–∞—Å—Ç–∏–Ω—É): ").strip()
        results = [c for c in self.contacts if phone in c["phone"]]
        self._display_results(results)

    def search_by_city_state(self):
        """–ü–æ—à—É–∫ –∑–∞ –º—ñ—Å—Ç–æ–º –∞–±–æ –æ–±–ª–∞—Å—Ç—é"""
        location = input("\n–í–≤–µ–¥—ñ—Ç—å –º—ñ—Å—Ç–æ –∞–±–æ –æ–±–ª–∞—Å—Ç—å: ").strip().lower()
        results = []
        for c in self.contacts:
            if (location in c["city"].lower() or
                    location in c["state"].lower()):
                results.append(c)
        self._display_results(results)

    def delete_record(self):
        """–í–∏–¥–∞–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
        phone = input("\n–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ").strip()

        for i, contact in enumerate(self.contacts):
            if contact["phone"] == phone:
                self._display_contact(contact)
                confirm = input("\n–í–∏–¥–∞–ª–∏—Ç–∏ —Ü–µ–π –∫–æ–Ω—Ç–∞–∫—Ç? (—Ç–∞–∫/–Ω—ñ): ").strip().lower()
                if confirm in ['—Ç–∞–∫', 'yes', 'y', '—Ç']:
                    self.contacts.pop(i)
                    print("‚úì –ö–æ–Ω—Ç–∞–∫—Ç –≤–∏–¥–∞–ª–µ–Ω–æ!")
                    return
                else:
                    print("–í–∏–¥–∞–ª–µ–Ω–Ω—è —Å–∫–∞—Å–æ–≤–∞–Ω–æ.")
                    return

        print(f"‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

    def update_record(self):
        """–û–Ω–æ–≤–ª–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç—É –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É"""
        phone = input("\n–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –æ–Ω–æ–≤–ª–µ–Ω–Ω—è: ").strip()

        for contact in self.contacts:
            if contact["phone"] == phone:
                print("\n–ü–æ—Ç–æ—á–Ω—ñ –¥–∞–Ω—ñ:")
                self._display_contact(contact)

                print("\n–í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—ñ –¥–∞–Ω—ñ (–Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å Enter, —â–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –±–µ–∑ –∑–º—ñ–Ω):")

                new_first_name = input(f"–Ü–º'—è [{contact['first_name']}]: ").strip()
                new_last_name = input(f"–ü—Ä—ñ–∑–≤–∏—â–µ [{contact['last_name']}]: ").strip()
                new_phone = input(f"–¢–µ–ª–µ—Ñ–æ–Ω [{contact['phone']}]: ").strip()
                new_city = input(f"–ú—ñ—Å—Ç–æ [{contact['city']}]: ").strip()
                new_state = input(f"–û–±–ª–∞—Å—Ç—å/–®—Ç–∞—Ç [{contact['state']}]: ").strip()

                # –û–Ω–æ–≤–ª—é—î–º–æ —Ç—ñ–ª—å–∫–∏ –Ω–µ–ø–æ—Ä–æ–∂–Ω—ñ –ø–æ–ª—è
                if new_first_name:
                    contact["first_name"] = new_first_name
                if new_last_name:
                    contact["last_name"] = new_last_name
                if new_phone:
                    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª—ñ–∫–∞—Ç –Ω–æ–º–µ—Ä–∞
                    if any(c["phone"] == new_phone and c != contact for c in self.contacts):
                        print(f"‚ö† –ù–æ–º–µ—Ä {new_phone} –≤–∂–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è!")
                        return
                    contact["phone"] = new_phone
                if new_city:
                    contact["city"] = new_city
                if new_state:
                    contact["state"] = new_state

                print("‚úì –ö–æ–Ω—Ç–∞–∫—Ç –æ–Ω–æ–≤–ª–µ–Ω–æ!")
                return

        print(f"‚ùå –ö–æ–Ω—Ç–∞–∫—Ç –∑ –Ω–æ–º–µ—Ä–æ–º {phone} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ!")

    def show_all_contacts(self):
        """–ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏"""
        if not self.contacts:
            print("\nüì≠ –¢–µ–ª–µ—Ñ–æ–Ω–Ω–∞ –∫–Ω–∏–≥–∞ –ø–æ—Ä–æ–∂–Ω—è")
            return

        print(f"\n=== –í—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏ ({len(self.contacts)}) ===")
        for i, contact in enumerate(self.contacts, 1):
            print(f"\n{i}.")
            self._display_contact(contact)

    def _display_contact(self, contact):
        """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–¥–Ω–æ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç—É"""
        print(f"  –Ü–º'—è: {contact['first_name']} {contact['last_name']}")
        print(f"  –¢–µ–ª–µ—Ñ–æ–Ω: {contact['phone']}")
        print(f"  –ú—ñ—Å—Ç–æ: {contact['city']}")
        print(f"  –û–±–ª–∞—Å—Ç—å/–®—Ç–∞—Ç: {contact['state']}")

    def _display_results(self, results):
        """–í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ—à—É–∫—É"""
        if not results:
            print("\n‚ùå –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")
            return

        print(f"\n=== –ó–Ω–∞–π–¥–µ–Ω–æ –∫–æ–Ω—Ç–∞–∫—Ç—ñ–≤: {len(results)} ===")
        for i, contact in enumerate(results, 1):
            print(f"\n{i}.")
            self._display_contact(contact)

    def run(self):
        """–ì–æ–ª–æ–≤–Ω–∏–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–∏"""
        while True:
            print("\n" + "=" * 50)
            print("üìû –¢–ï–õ–ï–§–û–ù–ù–ê –ö–ù–ò–ì–ê")
            print("=" * 50)
            print("1. –î–æ–¥–∞—Ç–∏ –Ω–æ–≤–∏–π –∫–æ–Ω—Ç–∞–∫—Ç")
            print("2. –ü–æ—à—É–∫ –∑–∞ —ñ–º'—è–º")
            print("3. –ü–æ—à—É–∫ –∑–∞ –ø—Ä—ñ–∑–≤–∏—â–µ–º")
            print("4. –ü–æ—à—É–∫ –∑–∞ –ø–æ–≤–Ω–∏–º —ñ–º'—è–º")
            print("5. –ü–æ—à—É–∫ –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É")
            print("6. –ü–æ—à—É–∫ –∑–∞ –º—ñ—Å—Ç–æ–º –∞–±–æ –æ–±–ª–∞—Å—Ç—é")
            print("7. –í–∏–¥–∞–ª–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç")
            print("8. –û–Ω–æ–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç")
            print("9. –ü–æ–∫–∞–∑–∞—Ç–∏ –≤—Å—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏")
            print("0. –í–∏–π—Ç–∏ —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏")

            choice = input("\n–û–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é: ").strip()

            if choice == "1":
                self.add_entry()
            elif choice == "2":
                self.search_by_first_name()
            elif choice == "3":
                self.search_by_last_name()
            elif choice == "4":
                self.search_by_full_name()
            elif choice == "5":
                self.search_by_phone()
            elif choice == "6":
                self.search_by_city_state()
            elif choice == "7":
                self.delete_record()
            elif choice == "8":
                self.update_record()
            elif choice == "9":
                self.show_all_contacts()
            elif choice == "0":
                self.save_data()
                print("\n–î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è! üëã")
                break
            else:
                print("‚ö† –ù–µ–≤—ñ—Ä–Ω–∞ –æ–ø—Ü—ñ—è! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")


def main():
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–≥–æ —Ä—è–¥–∫–∞
    if len(sys.argv) != 2:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –í–∫–∞–∂—ñ—Ç—å –Ω–∞–∑–≤—É —Ñ–∞–π–ª—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏!")
        print("–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: python phonebook.py <–Ω–∞–∑–≤–∞_—Ñ–∞–π–ª—É.json>")
        print("–ü—Ä–∏–∫–ª–∞–¥: python phonebook.py my_contacts.json")
        sys.exit(1)

    filename = sys.argv[1]

    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É
    if not filename.endswith('.json'):
        filename += '.json'

    # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–∞ –∑–∞–ø—É—Å–∫ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ—ó –∫–Ω–∏–≥–∏
    phonebook = PhoneBook(filename)
    phonebook.run()


if __name__ == "__main__":
    main()